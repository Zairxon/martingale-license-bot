import os
import sqlite3
import secrets
import string
from datetime import datetime, timedelta
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, MessageHandler, filters, ContextTypes

# ==============================================
# –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –ë–û–¢–ê
# ==============================================

TOKEN = os.getenv('BOT_TOKEN')
ADMIN_ID = 295698267  # –í–∞—à –†–ï–ê–õ–¨–ù–´–ô ID (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ!)
DB_FILE = 'licenses.db'
LICENSE_PRICE = 100

# –ë–∞–Ω–∫–æ–≤—Å–∫–∏–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –æ–ø–ª–∞—Ç—ã
PAYMENT_CARDS = {
    'visa': {
        'number': '4278 3100 2430 7167',
        'bank': 'Kapital Bank',
        'type': 'VISA'
    },
    'humo': {
        'number': '9860 1001 2541 9018', 
        'bank': 'Kapital Bank',
        'type': 'HUMO'
    }
}
CARD_OWNER = 'Asqarov Rasulbek'

# ==============================================
# –ö–û–ù–°–¢–ê–ù–¢–´ –° –¢–ï–ö–°–¢–ê–ú–ò
# ==============================================

EA_DESCRIPTION = """
ü§ñ **–ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò–ô –¢–û–†–ì–û–í–´–ô –°–û–í–ï–¢–ù–ò–ö / AVTOMATIK SAVDO MASLAHATCHI**

üìä **–¢–∏–ø / Turi:** –°—Ç—Ä–∞—Ç–µ–≥–∏—è –ë–æ–≥–¥–∞–Ω–æ–≤–∞ / Bogdanov strategiyasi
üí∞ **–°–∏–º–≤–æ–ª—ã / Simbollar:** BTCUSD, XAUUSD (Gold/Oltin)

‚öôÔ∏è **–ù–ê–°–¢–†–û–ô–ö–ò –ü–û –£–ú–û–õ–ß–ê–ù–ò–Æ / STANDART SOZLAMALAR:**

üìà **BTCUSD:**
üá∑üá∫ ‚Ä¢ –ù–∞—á–∞–ª—å–Ω—ã–π –ª–æ—Ç: 0.01 ‚Ä¢ Take Profit: 10000 –ø—É–Ω–∫—Ç–æ–≤ ‚Ä¢ –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ —Å—Ç–æ–ø–æ–≤: 3000 –ø—É–Ω–∫—Ç–æ–≤ ‚Ä¢ –ú–∞–∫—Å–∏–º—É–º —É–¥–≤–æ–µ–Ω–∏–π: 15
üá∫üáø ‚Ä¢ Boshlang'ich lot: 0.01 ‚Ä¢ Take Profit: 10000 punkt ‚Ä¢ Stop masofasi: 3000 punkt ‚Ä¢ Maksimal ikkilanish: 15

ü•á **XAUUSD (Gold/Oltin):**
üá∑üá∫ ‚Ä¢ –ù–∞—á–∞–ª—å–Ω—ã–π –ª–æ—Ç: 0.01 ‚Ä¢ Take Profit: 1000 –ø—É–Ω–∫—Ç–æ–≤ ‚Ä¢ –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ —Å—Ç–æ–ø–æ–≤: 300 –ø—É–Ω–∫—Ç–æ–≤ ‚Ä¢ –ú–∞–∫—Å–∏–º—É–º —É–¥–≤–æ–µ–Ω–∏–π: 10
üá∫üáø ‚Ä¢ Boshlang'ich lot: 0.01 ‚Ä¢ Take Profit: 1000 punkt ‚Ä¢ Stop masofasi: 300 punkt ‚Ä¢ Maksimal ikkilanish: 10

üéØ **–û–°–û–ë–ï–ù–ù–û–°–¢–ò / XUSUSIYATLAR:**
‚úÖ VPS –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π / VPS optimallashtirilgan
‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç—Ä–µ–Ω–¥–∞ / Avtomatik trend aniqlash
‚úÖ –ó–∞—â–∏—Ç–∞ –æ—Ç –±–æ–ª—å—à–∏—Ö –ø—Ä–æ—Å–∞–¥–æ–∫ / Katta pasayishlardan himoya
‚úÖ –£–º–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —Å—Ç–æ–ø-–ª–æ—Å—Å–æ–≤ / Aqlli stop-loss tizimi
‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Å—Å–∏–π / Avtomatik sessiya qayta ishga tushirish

‚ö†Ô∏è **–í–ù–ò–ú–ê–ù–ò–ï / DIQQAT:** 
üá∑üá∫ –°—Ç—Ä–∞—Ç–µ–≥–∏—è –ë–æ–≥–¥–∞–Ω–æ–≤–∞ —Ç—Ä–µ–±—É–µ—Ç –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ–≥–æ –¥–µ–ø–æ–∑–∏—Ç–∞ –∏ –ø–æ–Ω–∏–º–∞–Ω–∏—è —Ä–∏—Å–∫–æ–≤. –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π –¥–µ–ø–æ–∑–∏—Ç: –æ—Ç $1000 –Ω–∞ 0.01 –ª–æ—Ç.
üá∫üáø Bogdanov strategiyasi yetarli depozit va xavflarni tushunishni talab qiladi. Tavsiya qilingan depozit: 0.01 lot uchun $1000 dan.
"""

EA_INSTRUCTION = """
üìñ **–ü–û–î–†–û–ë–ù–ê–Ø –ò–ù–°–¢–†–£–ö–¶–ò–Ø / BATAFSIL YO'RIQNOMA**

üîß **–£–°–¢–ê–ù–û–í–ö–ê / O'RNATISH:**
üá∑üá∫ 1. –°–∫–∞—á–∞–π—Ç–µ —Ñ–∞–π–ª EA –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –ª–∏—Ü–µ–Ω–∑–∏–∏
üá∑üá∫ 2. –ü–æ–º–µ—Å—Ç–∏—Ç–µ —Ñ–∞–π–ª –≤ –ø–∞–ø–∫—É: MetaTrader 5/MQL5/Experts/
üá∑üá∫ 3. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ MetaTrader 5
üá∑üá∫ 4. –ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ EA –Ω–∞ –≥—Ä–∞—Ñ–∏–∫ –Ω—É–∂–Ω–æ–≥–æ —Å–∏–º–≤–æ–ª–∞

üá∫üáø 1. Litsenziya olgandan keyin EA faylini yuklab oling
üá∫üáø 2. Faylni quyidagi papkaga joylashtiring: MetaTrader 5/MQL5/Experts/
üá∫üáø 3. MetaTrader 5 ni qayta ishga tushiring
üá∫üáø 4. EA ni kerakli simvol grafigiga sudrab olib boring

üìä **–ù–ê–°–¢–†–û–ô–ö–ò –î–õ–Ø BTCUSD / BTCUSD SOZLAMALARI:**
üá∑üá∫ ‚Ä¢ –ù–∞—á–∞–ª—å–Ω—ã–π –ª–æ—Ç: 0.01 ‚Ä¢ Take Profit: 10000 –ø—É–Ω–∫—Ç–æ–≤ ‚Ä¢ Buy Stop Distance: 3000 –ø—É–Ω–∫—Ç–æ–≤ ‚Ä¢ –ú–∞–∫—Å–∏–º—É–º —É–¥–≤–æ–µ–Ω–∏–π: 15
üá∫üáø ‚Ä¢ Boshlang'ich lot: 0.01 ‚Ä¢ Take Profit: 10000 punkt ‚Ä¢ Buy Stop masofasi: 3000 punkt ‚Ä¢ Maksimal ikkilanish: 15

ü•á **–ù–ê–°–¢–†–û–ô–ö–ò –î–õ–Ø XAUUSD / XAUUSD SOZLAMALARI:**  
üá∑üá∫ ‚Ä¢ –ù–∞—á–∞–ª—å–Ω—ã–π –ª–æ—Ç: 0.01 ‚Ä¢ Take Profit: 1000 –ø—É–Ω–∫—Ç–æ–≤ ‚Ä¢ Buy Stop Distance: 300 –ø—É–Ω–∫—Ç–æ–≤ ‚Ä¢ –ú–∞–∫—Å–∏–º—É–º —É–¥–≤–æ–µ–Ω–∏–π: 10
üá∫üáø ‚Ä¢ Boshlang'ich lot: 0.01 ‚Ä¢ Take Profit: 1000 punkt ‚Ä¢ Buy Stop masofasi: 300 punkt ‚Ä¢ Maksimal ikkilanish: 10

üí° **–†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò / TAVSIYALAR:**
üá∑üá∫ ‚Ä¢ –¢–æ—Ä–≥—É–π—Ç–µ —Ç–æ–ª—å–∫–æ –Ω–∞ VPS ‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ ECN —Å—á–µ—Ç–∞ —Å –Ω–∏–∑–∫–∏–º —Å–ø—Ä–µ–¥–æ–º ‚Ä¢ –ú–æ–Ω–∏—Ç–æ—Ä—å—Ç–µ –ø–µ—Ä–≤—ã–µ —Å–¥–µ–ª–∫–∏ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ
üá∫üáø ‚Ä¢ Faqat VPS da savdo qiling ‚Ä¢ Past spred bilan ECN hisoblarni ishlating ‚Ä¢ Birinchi bitimlarni diqqat bilan kuzating

üÜò **–ü–û–î–î–ï–†–ñ–ö–ê / QULLAB-QUVVATLASH:**
‚Ä¢ Telegram: @rasul_asqarov_rfx
‚Ä¢ –ì—Ä—É–ø–ø–∞ / Guruh: t.me/RFx_Group
"""

# ==============================================
# –ü–†–û–í–ï–†–ö–ê –ê–î–ú–ò–ù–ê (–ü–†–û–°–¢–ê–Ø –ò –ù–ê–î–ï–ñ–ù–ê–Ø)
# ==============================================

def is_admin(user_id):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–¥–º–∏–Ω–∞"""
    try:
        user_id_int = int(user_id)
        admin_id_int = int(ADMIN_ID)
        return user_id_int == admin_id_int
    except (ValueError, TypeError):
        return False

# ==============================================
# –ë–ê–ó–ê –î–ê–ù–ù–´–•
# ==============================================

def init_database():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    conn = sqlite3.connect(DB_FILE)
    cursor = conn.cursor()
    
    # –¢–∞–±–ª–∏—Ü–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS users (
            user_id INTEGER PRIMARY KEY,
            username TEXT,
            license_key TEXT UNIQUE,
            license_type TEXT DEFAULT 'trial',
            license_status TEXT DEFAULT 'inactive',
            expires_at TIMESTAMP,
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    
    # –¢–∞–±–ª–∏—Ü–∞ –¥–ª—è —Ñ–∞–π–ª–æ–≤ EA
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS ea_files (
            id INTEGER PRIMARY KEY,
            filename TEXT NOT NULL,
            file_data BLOB NOT NULL,
            upload_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    
    # –¢–∞–±–ª–∏—Ü–∞ –¥–ª—è –∑–∞—è–≤–æ–∫ –Ω–∞ –æ–ø–ª–∞—Ç—É
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS payment_requests (
            id INTEGER PRIMARY KEY,
            user_id INTEGER NOT NULL,
            username TEXT,
            amount REAL DEFAULT 100,
            status TEXT DEFAULT 'pending',
            receipt_file_id TEXT,
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
            processed_at TIMESTAMP
        )
    ''')
    
    conn.commit()
    conn.close()

def register_user(user_id, username):
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    try:
        conn = sqlite3.connect(DB_FILE)
        cursor = conn.cursor()
        cursor.execute('INSERT OR IGNORE INTO users (user_id, username) VALUES (?, ?)', 
                      (user_id, username))
        conn.commit()
        conn.close()
    except Exception as e:
        pass  # –¢–∏—Ö–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫

def generate_license_key():
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ª–∏—Ü–µ–Ω–∑–∏–æ–Ω–Ω–æ–≥–æ –∫–ª—é—á–∞"""
    return ''.join(secrets.choice(string.ascii_uppercase + string.digits) for _ in range(16))

def create_trial_license(user_id):
    """–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–±–Ω–æ–π –ª–∏—Ü–µ–Ω–∑–∏–∏"""
    try:
        conn = sqlite3.connect(DB_FILE)
        cursor = conn.cursor()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª–∞ –ª–∏ —É–∂–µ –ø—Ä–æ–±–Ω–∞—è –ª–∏—Ü–µ–Ω–∑–∏—è
        cursor.execute('SELECT license_key FROM users WHERE user_id = ? AND license_type = "trial"', 
                      (user_id,))
        existing = cursor.fetchone()
        
        if existing:
            conn.close()
            return None, "–£ –≤–∞—Å —É–∂–µ –±—ã–ª–∞ –ø—Ä–æ–±–Ω–∞—è –ª–∏—Ü–µ–Ω–∑–∏—è"
        
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –ø—Ä–æ–±–Ω—É—é –ª–∏—Ü–µ–Ω–∑–∏—é
        license_key = generate_license_key()
        expires_at = datetime.now() + timedelta(days=3)
        
        cursor.execute('''
            UPDATE users 
            SET license_key = ?, license_type = 'trial', license_status = 'active', expires_at = ?
            WHERE user_id = ?
        ''', (license_key, expires_at, user_id))
        
        conn.commit()
        conn.close()
        
        return license_key, None
        
    except Exception as e:
        return None, "–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ª–∏—Ü–µ–Ω–∑–∏–∏"

def create_full_license(user_id):
    """–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª–Ω–æ–π –ª–∏—Ü–µ–Ω–∑–∏–∏"""
    try:
        conn = sqlite3.connect(DB_FILE)
        cursor = conn.cursor()
        
        # –°–æ–∑–¥–∞–µ–º –ø–æ–ª–Ω—É—é –ª–∏—Ü–µ–Ω–∑–∏—é
        license_key = generate_license_key()
        
        cursor.execute('''
            UPDATE users 
            SET license_key = ?, license_type = 'full', license_status = 'active', expires_at = NULL
            WHERE user_id = ?
        ''', (license_key, user_id))
        
        conn.commit()
        conn.close()
        return license_key
        
    except Exception as e:
        return None

def get_user_license(user_id):
    """–ü–æ–ª—É—á–∏—Ç—å –ª–∏—Ü–µ–Ω–∑–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    try:
        conn = sqlite3.connect(DB_FILE)
        cursor = conn.cursor()
        cursor.execute('SELECT license_key, license_status, license_type, expires_at FROM users WHERE user_id = ?', 
                      (user_id,))
        result = cursor.fetchone()
        conn.close()
        return result
    except Exception as e:
        return None

def create_payment_request(user_id, username):
    """–°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –æ–ø–ª–∞—Ç—É"""
    try:
        conn = sqlite3.connect(DB_FILE)
        cursor = conn.cursor()
        cursor.execute('''
            INSERT INTO payment_requests (user_id, username, amount, status) 
            VALUES (?, ?, ?, 'pending')
        ''', (user_id, username, LICENSE_PRICE))
        request_id = cursor.lastrowid
        conn.commit()
        conn.close()
        return request_id
    except Exception as e:
        return None

def update_payment_receipt(request_id, file_id):
    """–û–±–Ω–æ–≤–∏—Ç—å —á–µ–∫ –¥–ª—è –∑–∞—è–≤–∫–∏ –Ω–∞ –æ–ø–ª–∞—Ç—É"""
    try:
        conn = sqlite3.connect(DB_FILE)
        cursor = conn.cursor()
        cursor.execute('''
            UPDATE payment_requests 
            SET receipt_file_id = ? 
            WHERE id = ?
        ''', (file_id, request_id))
        conn.commit()
        conn.close()
        return True
    except Exception as e:
        return False

def get_pending_payments():
    """–ü–æ–ª—É—á–∏—Ç—å –æ–∂–∏–¥–∞—é—â–∏–µ –∑–∞—è–≤–∫–∏"""
    try:
        conn = sqlite3.connect(DB_FILE)
        cursor = conn.cursor()
        cursor.execute('''
            SELECT id, user_id, username, amount, receipt_file_id, created_at 
            FROM payment_requests 
            WHERE status = 'pending' AND receipt_file_id IS NOT NULL
            ORDER BY created_at DESC
        ''')
        result = cursor.fetchall()
        conn.close()
        return result
    except Exception as e:
        return []

def approve_payment(request_id):
    """–û–¥–æ–±—Ä–∏—Ç—å –ø–ª–∞—Ç–µ–∂"""
    try:
        conn = sqlite3.connect(DB_FILE)
        cursor = conn.cursor()
        
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏
        cursor.execute('SELECT user_id FROM payment_requests WHERE id = ?', (request_id,))
        result = cursor.fetchone()
        if not result:
            conn.close()
            return False
        
        user_id = result[0]
        
        # –°–æ–∑–¥–∞–µ–º –ø–æ–ª–Ω—É—é –ª–∏—Ü–µ–Ω–∑–∏—é
        license_key = create_full_license(user_id)
        if not license_key:
            conn.close()
            return False
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏
        cursor.execute('''
            UPDATE payment_requests 
            SET status = 'approved', processed_at = CURRENT_TIMESTAMP 
            WHERE id = ?
        ''', (request_id,))
        
        conn.commit()
        conn.close()
        return license_key
        
    except Exception as e:
        return False

def reject_payment(request_id):
    """–û—Ç–∫–ª–æ–Ω–∏—Ç—å –ø–ª–∞—Ç–µ–∂"""
    try:
        conn = sqlite3.connect(DB_FILE)
        cursor = conn.cursor()
        cursor.execute('''
            UPDATE payment_requests 
            SET status = 'rejected', processed_at = CURRENT_TIMESTAMP 
            WHERE id = ?
        ''', (request_id,))
        conn.commit()
        conn.close()
        return True
    except Exception as e:
        return False

def save_ea_file(file_data, filename):
    """–°–æ—Ö—Ä–∞–Ω–∏—Ç—å EA —Ñ–∞–π–ª"""
    try:
        conn = sqlite3.connect(DB_FILE)
        cursor = conn.cursor()
        cursor.execute('DELETE FROM ea_files')  # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π —Ñ–∞–π–ª
        cursor.execute('INSERT INTO ea_files (filename, file_data) VALUES (?, ?)', 
                      (filename, file_data))
        conn.commit()
        conn.close()
        return True
    except Exception as e:
        return False

def get_ea_file():
    """–ü–æ–ª—É—á–∏—Ç—å EA —Ñ–∞–π–ª"""
    try:
        conn = sqlite3.connect(DB_FILE)
        cursor = conn.cursor()
        cursor.execute('SELECT file_data FROM ea_files ORDER BY upload_date DESC LIMIT 1')
        result = cursor.fetchone()
        conn.close()
        return result[0] if result else None
    except Exception as e:
        return None

def get_license_stats():
    """–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ª–∏—Ü–µ–Ω–∑–∏–π"""
    try:
        conn = sqlite3.connect(DB_FILE)
        cursor = conn.cursor()
        
        cursor.execute('SELECT COUNT(*) FROM users WHERE license_status = "active"')
        active_licenses = cursor.fetchone()[0]
        
        cursor.execute('SELECT COUNT(*) FROM users WHERE license_type = "trial"')
        trial_licenses = cursor.fetchone()[0]
        
        cursor.execute('SELECT COUNT(*) FROM users WHERE license_type = "full"')
        full_licenses = cursor.fetchone()[0]
        
        cursor.execute('SELECT COUNT(*) FROM users')
        total_users = cursor.fetchone()[0]
        
        conn.close()
        
        return {
            'total_users': total_users,
            'active_licenses': active_licenses,
            'trial_licenses': trial_licenses,
            'full_licenses': full_licenses
        }
    except Exception as e:
        return None

# ==============================================
# –ö–õ–ê–í–ò–ê–¢–£–†–´
# ==============================================

def get_main_keyboard():
    """–ì–ª–∞–≤–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞"""
    keyboard = [
        [InlineKeyboardButton("üÜì –ü–æ–ª—É—á–∏—Ç—å 3 –¥–Ω—è –ë–ï–°–ü–õ–ê–¢–ù–û / 3 kun BEPUL olish", callback_data="get_trial")],
        [InlineKeyboardButton("üí∞ –ö—É–ø–∏—Ç—å –ø–æ–ª–Ω—É—é –ª–∏—Ü–µ–Ω–∑–∏—é ($100) / To'liq litsenziya sotib olish", callback_data="buy_license")],
        [InlineKeyboardButton("üìä –ú–æ–π —Å—Ç–∞—Ç—É—Å / Mening holatim", callback_data="check_status")],
        [InlineKeyboardButton("üìñ –û–ø–∏—Å–∞–Ω–∏–µ —Å–æ–≤–µ—Ç–Ω–∏–∫–∞ / Maslahatchi tavsifi", callback_data="show_description")],
        [InlineKeyboardButton("üìñ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è / Yo'riqnoma", callback_data="show_instruction")]
    ]
    return InlineKeyboardMarkup(keyboard)

# ==============================================
# –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –ö–û–ú–ê–ù–î
# ==============================================

async def cmd_start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ö–æ–º–∞–Ω–¥–∞ /start"""
    user = update.effective_user
    register_user(user.id, user.username or "Unknown")
    
    welcome_text = (
        "ü§ñ **–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Bogdanov Strategy EA License Bot!**\n"
        "ü§ñ **Bogdanov strategiyasi EA License Bot ga xush kelibsiz!**\n\n"
        "üéØ **–≠—Ç–æ—Ç –±–æ—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –¥–æ—Å—Ç—É–ø –∫ —Ç–æ—Ä–≥–æ–≤–æ–º—É —Å–æ–≤–µ—Ç–Ω–∏–∫—É:**\n"
        "üéØ **Ushbu bot savdo maslahatchiiga kirish imkonini beradi:**\n"
        "üá∑üá∫ ‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Ç–æ—Ä–≥–æ–≤–ª—è –ø–æ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –ë–æ–≥–¥–∞–Ω–æ–≤–∞\n"
        "üá∫üáø ‚Ä¢ Bogdanov strategiyasi bo'yicha avtomatik savdo\n"
        "üá∑üá∫ ‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ BTCUSD –∏ XAUUSD\n"
        "üá∫üáø ‚Ä¢ BTCUSD va XAUUSD qo'llab-quvvatlash\n"
        "üá∑üá∫ ‚Ä¢ VPS –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è\n"
        "üá∫üáø ‚Ä¢ VPS optimallashtirilgan versiya\n\n"
        "üí° **–î–æ—Å—Ç—É–ø–Ω—ã–µ –æ–ø—Ü–∏–∏ / Mavjud variantlar:**\n"
        "üÜì **–ü—Ä–æ–±–Ω–∞—è –ª–∏—Ü–µ–Ω–∑–∏—è / Sinov litsenziyasi** - 3 –¥–Ω—è –±–µ—Å–ø–ª–∞—Ç–Ω–æ / kun bepul\n"
        "üí∞ **–ü–æ–ª–Ω–∞—è –ª–∏—Ü–µ–Ω–∑–∏—è / To'liq litsenziya** - $100 (–±–µ–∑–ª–∏–º–∏—Ç–Ω—ã–π –¥–æ—Å—Ç—É–ø / cheksiz kirish)\n\n"
        "üë• **–ù–∞—à–∞ –≥—Ä—É–ø–ø–∞ / Bizning guruh:** t.me/RFx_Group\n"
        "üìû **–ü–æ–¥–¥–µ—Ä–∂–∫–∞ / Qo'llab-quvvatlash:** @rasul_asqarov_rfx\n\n"
        "‚¨áÔ∏è –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ / Harakatni tanlang:"
    )
    
    await update.message.reply_text(welcome_text, parse_mode='Markdown', reply_markup=get_main_keyboard())

async def cmd_help(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ö–æ–º–∞–Ω–¥–∞ /help"""
    help_text = (
        "‚ùì **–°–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É**\n\n"
        "üîπ **/start** - –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n"
        "üîπ **üÜì –ü—Ä–æ–±–Ω–∞—è –ª–∏—Ü–µ–Ω–∑–∏—è** - 3 –¥–Ω—è –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞\n"
        "üîπ **üí∞ –ü–æ–ª–Ω–∞—è –ª–∏—Ü–µ–Ω–∑–∏—è** - –±–µ–∑–ª–∏–º–∏—Ç–Ω—ã–π –¥–æ—Å—Ç—É–ø –∑–∞ $100\n"
        "üîπ **üìä –ú–æ–π —Å—Ç–∞—Ç—É—Å** - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–µ–∫—É—â—É—é –ª–∏—Ü–µ–Ω–∑–∏—é\n"
        "üîπ **üìñ –û–ø–∏—Å–∞–Ω–∏–µ** - –¥–µ—Ç–∞–ª–∏ –æ —Ç–æ—Ä–≥–æ–≤–æ–º —Å–æ–≤–µ—Ç–Ω–∏–∫–µ\n"
        "üîπ **üìñ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è** - —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ\n\n"
        "üìû **–ü–æ–¥–¥–µ—Ä–∂–∫–∞:**\n"
        "‚Ä¢ Telegram: @rasul_asqarov_rfx\n"
        "‚Ä¢ –ì—Ä—É–ø–ø–∞: t.me/RFx_Group"
    )
    
    await update.message.reply_text(help_text, parse_mode='Markdown', reply_markup=get_main_keyboard())

async def cmd_stats(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ö–æ–º–∞–Ω–¥–∞ /stats (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞)"""
    if not is_admin(update.effective_user.id):
        await update.message.reply_text("‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω!")
        return
    
    stats = get_license_stats()
    if not stats:
        await update.message.reply_text("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏")
        return
    
    stats_text = (
        f"üìä **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞**\n\n"
        f"üë• **–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:** {stats['total_users']}\n"
        f"‚úÖ **–ê–∫—Ç–∏–≤–Ω—ã—Ö –ª–∏—Ü–µ–Ω–∑–∏–π:** {stats['active_licenses']}\n"
        f"üÜì **–ü—Ä–æ–±–Ω—ã—Ö –ª–∏—Ü–µ–Ω–∑–∏–π:** {stats['trial_licenses']}\n"
        f"üí∞ **–ü–æ–ª–Ω—ã—Ö –ª–∏—Ü–µ–Ω–∑–∏–π:** {stats['full_licenses']}\n\n"
        f"üíµ **–ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–π –¥–æ—Ö–æ–¥:** ${stats['full_licenses'] * LICENSE_PRICE}"
    )
    
    await update.message.reply_text(stats_text, parse_mode='Markdown')

async def cmd_upload_ea(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ö–æ–º–∞–Ω–¥–∞ /upload_ea (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞)"""
    if not is_admin(update.effective_user.id):
        await update.message.reply_text("‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω!")
        return
        
    await update.message.reply_text(
        "üìÅ **–ó–∞–≥—Ä—É–∑–∫–∞ EA —Ñ–∞–π–ª–∞ / EA fayl yuklash**\n\n"
        "üá∑üá∫ –û—Ç–ø—Ä–∞–≤—å—Ç–µ .ex5 —Ñ–∞–π–ª –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –≤ —Å–∏—Å—Ç–µ–º—É.\n"
        "üá∫üáø Tizimga yuklash uchun .ex5 faylini yuboring.\n"
        "üá∑üá∫ –≠—Ç–æ—Ç —Ñ–∞–π–ª –±—É–¥—É—Ç –ø–æ–ª—É—á–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ EA.\n"
        "üá∫üáø Ushbu faylni foydalanuvchilar EA yuklab olishda olishadi.",
        parse_mode='Markdown'
    )

async def cmd_payments(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ö–æ–º–∞–Ω–¥–∞ /payments - —Å–ø–∏—Å–æ–∫ –æ–∂–∏–¥–∞—é—â–∏—Ö –ø–ª–∞—Ç–µ–∂–µ–π"""
    if not is_admin(update.effective_user.id):
        await update.message.reply_text("‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω!")
        return
    
    payments = get_pending_payments()
    
    if not payments:
        await update.message.reply_text("üìã –ù–µ—Ç –æ–∂–∏–¥–∞—é—â–∏—Ö –∑–∞—è–≤–æ–∫ –Ω–∞ –æ–ø–ª–∞—Ç—É")
        return
    
    text = "üí≥ **–û–ñ–ò–î–ê–Æ–©–ò–ï –ó–ê–Ø–í–ö–ò:**\n\n"
    
    for payment in payments:
        request_id, user_id, username, amount, file_id, created_at = payment
        text += f"üÜî **ID:** {request_id}\n"
        text += f"üë§ **–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:** @{username} (ID: {user_id})\n"
        text += f"üíµ **–°—É–º–º–∞:** ${amount}\n"
        text += f"üìÖ **–î–∞—Ç–∞:** {created_at}\n"
        text += f"---\n"
    
    await update.message.reply_text(text, parse_mode='Markdown')

# ==============================================
# –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò CALLBACK –ó–ê–ü–†–û–°–û–í
# ==============================================

async def handle_get_trial(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ–±–Ω–æ–π –ª–∏—Ü–µ–Ω–∑–∏–∏"""
    query = update.callback_query
    await query.answer()
    
    user_id = query.from_user.id
    license_key, error = create_trial_license(user_id)
    
    if error:
        await query.message.reply_text(
            f"‚ùå **–û—à–∏–±–∫–∞!**\n\n{error}",
            parse_mode='Markdown',
            reply_markup=get_main_keyboard()
        )
        return
    
    keyboard = [
        [InlineKeyboardButton("üìÅ –°–∫–∞—á–∞—Ç—å EA", callback_data="download_ea")],
        [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="back_to_menu")]
    ]
    
    await query.message.reply_text(
        f"üéâ **–ü—Ä–æ–±–Ω–∞—è –ª–∏—Ü–µ–Ω–∑–∏—è –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞!**\n\n"
        f"üîë **–í–∞—à –ª–∏—Ü–µ–Ω–∑–∏–æ–Ω–Ω—ã–π –∫–ª—é—á:**\n`{license_key}`\n\n"
        f"‚è∞ **–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è:** 3 –¥–Ω—è\n\n"
        f"üìã **–ß—Ç–æ –¥–∞–ª—å—à–µ:**\n"
        f"1. –°–∫–∞—á–∞–π—Ç–µ EA –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ\n"
        f"2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –≤ MetaTrader 5\n"
        f"3. –í–≤–µ–¥–∏—Ç–µ –∫–ª—é—á –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö EA\n\n"
        f"üí° **–°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –∫–ª—é—á** - –æ–Ω –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–æ–≤–µ—Ç–Ω–∏–∫–∞!",
        parse_mode='Markdown',
        reply_markup=InlineKeyboardMarkup(keyboard)
    )

async def handle_check_status(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ª–∏—Ü–µ–Ω–∑–∏–∏"""
    query = update.callback_query
    await query.answer()
    
    user_id = query.from_user.id
    license_data = get_user_license(user_id)
    
    if not license_data or not license_data[0]:
        await query.message.reply_text(
            "‚ùå **–õ–∏—Ü–µ–Ω–∑–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞**\n\n"
            "–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –ª–∏—Ü–µ–Ω–∑–∏–∏.\n"
            "–ü–æ–ª—É—á–∏—Ç–µ –ø—Ä–æ–±–Ω—É—é –∏–ª–∏ –∫—É–ø–∏—Ç–µ –ø–æ–ª–Ω—É—é –ª–∏—Ü–µ–Ω–∑–∏—é.",
            parse_mode='Markdown',
            reply_markup=get_main_keyboard()
        )
        return
    
    license_key, status, license_type, expires_at = license_data
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å—Ç–µ—á–µ–Ω–∏–µ –ª–∏—Ü–µ–Ω–∑–∏–∏
    if expires_at and datetime.now() > datetime.fromisoformat(expires_at):
        status = "expired"
    
    status_emoji = "‚úÖ" if status == "active" else "‚ùå"
    type_emoji = "üÜì" if license_type == "trial" else "üí∞"
    
    status_text = (
        f"{status_emoji} **–°—Ç–∞—Ç—É—Å –ª–∏—Ü–µ–Ω–∑–∏–∏**\n\n"
        f"üîë **–ö–ª—é—á:** `{license_key}`\n"
        f"{type_emoji} **–¢–∏–ø:** {license_type.title()}\n"
        f"üìä **–°—Ç–∞—Ç—É—Å:** {status.title()}\n"
    )
    
    if expires_at and license_type == "trial":
        status_text += f"‚è∞ **–ò—Å—Ç–µ–∫–∞–µ—Ç:** {expires_at}\n"
    elif license_type == "full":
        status_text += f"‚ôæÔ∏è **–°—Ä–æ–∫:** –ë–µ–∑–ª–∏–º–∏—Ç–Ω—ã–π\n"
    
    keyboard = []
    if status == "active":
        keyboard.append([InlineKeyboardButton("üìÅ –°–∫–∞—á–∞—Ç—å EA", callback_data="download_ea")])
    else:
        keyboard.extend([
            [InlineKeyboardButton("üÜì –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–±–Ω—É—é –ª–∏—Ü–µ–Ω–∑–∏—é", callback_data="get_trial")],
            [InlineKeyboardButton("üí∞ –ö—É–ø–∏—Ç—å –ø–æ–ª–Ω—É—é –ª–∏—Ü–µ–Ω–∑–∏—é", callback_data="buy_license")]
        ])
    
    keyboard.append([InlineKeyboardButton("üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="back_to_menu")])
    
    await query.message.reply_text(
        status_text,
        parse_mode='Markdown',
        reply_markup=InlineKeyboardMarkup(keyboard)
    )

async def handle_show_description(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–∫–∞–∑ –æ–ø–∏—Å–∞–Ω–∏—è EA"""
    query = update.callback_query
    await query.answer()
    
    keyboard = [
        [InlineKeyboardButton("üìñ –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è", callback_data="show_instruction")],
        [InlineKeyboardButton("üÜì –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–±–Ω—É—é –ª–∏—Ü–µ–Ω–∑–∏—é", callback_data="get_trial")],
        [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="back_to_menu")]
    ]
    
    await query.message.reply_text(
        EA_DESCRIPTION,
        parse_mode='Markdown',
        reply_markup=InlineKeyboardMarkup(keyboard)
    )

async def handle_show_instruction(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–∫–∞–∑ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏"""
    query = update.callback_query
    await query.answer()
    
    keyboard = [
        [InlineKeyboardButton("üìñ –û–ø–∏—Å–∞–Ω–∏–µ —Å–æ–≤–µ—Ç–Ω–∏–∫–∞", callback_data="show_description")],
        [InlineKeyboardButton("üÜì –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–±–Ω—É—é –ª–∏—Ü–µ–Ω–∑–∏—é", callback_data="get_trial")],
        [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="back_to_menu")]
    ]
    
    await query.message.reply_text(
        EA_INSTRUCTION,
        parse_mode='Markdown',
        reply_markup=InlineKeyboardMarkup(keyboard)
    )

async def handle_buy_license(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–∫—É–ø–∫–∞ –ø–æ–ª–Ω–æ–π –ª–∏—Ü–µ–Ω–∑–∏–∏"""
    query = update.callback_query
    await query.answer()
    
    user_id = query.from_user.id
    username = query.from_user.username or "Unknown"
    
    # –°–æ–∑–¥–∞–µ–º –∑–∞—è–≤–∫—É –Ω–∞ –æ–ø–ª–∞—Ç—É
    request_id = create_payment_request(user_id, username)
    if not request_id:
        await query.message.reply_text("‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞—è–≤–∫–∏!")
        return
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –∑–∞—è–≤–∫–∏ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    context.user_data['payment_request_id'] = request_id
    
    keyboard = [
        [InlineKeyboardButton("‚úÖ –Ø –æ–ø–ª–∞—Ç–∏–ª", callback_data="payment_sent")],
        [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="back_to_menu")]
    ]
    
    await query.message.reply_text(
        f"üí≥ **–û–ü–õ–ê–¢–ê –ü–û–õ–ù–û–ô –õ–ò–¶–ï–ù–ó–ò–ò / TO'LIQ LITSENZIYA TO'LOVI**\n\n"
        f"üíµ **–°—É–º–º–∞ / Summa:** ${LICENSE_PRICE} (–∏–ª–∏ —ç–∫–≤–∏–≤–∞–ª–µ–Ω—Ç –≤ —Å—É–º–∞—Ö)\n\n"
        f"üí≥ **–†–ï–ö–í–ò–ó–ò–¢–´ –î–õ–Ø –û–ü–õ–ê–¢–´ / TO'LOV REKVIZITLARI:**\n\n"
        f"üè¶ **VISA Kapital:** `{PAYMENT_CARDS['visa']['number']}`\n"
        f"üè¶ **HUMO Kapital:** `{PAYMENT_CARDS['humo']['number']}`\n"
        f"üë§ **–í–ª–∞–¥–µ–ª–µ—Ü / Egasi:** {CARD_OWNER}\n"
        f"üèõÔ∏è **–ë–∞–Ω–∫:** Kapital Bank\n"
        f"üåç **–í–∞–ª—é—Ç–∞:** USD/UZS\n\n"
        f"üìù **–ò–ù–°–¢–†–£–ö–¶–ò–Ø / YO'RIQNOMA:**\n"
        f"üá∑üá∫ 1. –ü–µ—Ä–µ–≤–µ–¥–∏—Ç–µ ${LICENSE_PRICE} –Ω–∞ –ª—é–±—É—é –∏–∑ —É–∫–∞–∑–∞–Ω–Ω—ã—Ö –∫–∞—Ä—Ç\n"
        f"üá∫üáø 1. Ko'rsatilgan kartalardan biriga ${LICENSE_PRICE} o'tkazing\n"
        f"üá∑üá∫ 2. –°–¥–µ–ª–∞–π—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç —á–µ–∫–∞ –æ–± –æ–ø–ª–∞—Ç–µ\n"
        f"üá∫üáø 2. To'lov chekining skrinshotini oling\n"
        f"üá∑üá∫ 3. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É \"‚úÖ –Ø –æ–ø–ª–∞—Ç–∏–ª\"\n"
        f"üá∫üáø 3. \"‚úÖ Men to'ladim\" tugmasini bosing\n"
        f"üá∑üá∫ 4. –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ —á–µ–∫–∞ —á–µ—Ä–µ–∑ –±–æ—Ç–∞\n"
        f"üá∫üáø 4. Chek rasmini bot orqali yuboring\n"
        f"üá∑üá∫ 5. –û–∂–∏–¥–∞–π—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è (–æ–±—ã—á–Ω–æ 10-30 –º–∏–Ω—É—Ç)\n"
        f"üá∫üáø 5. Tasdiqlashni kuting (odatda 10-30 daqiqa)\n\n"
        f"üìû **–í–æ–ø—Ä–æ—Å—ã / Savollar:** @rasul_asqarov_rfx\n"
        f"üë• **–ì—Ä—É–ø–ø–∞ / Guruh:** t.me/RFx_Group\n\n"
        f"‚ö†Ô∏è **–í–ù–ò–ú–ê–ù–ò–ï / DIQQAT:** \n"
        f"üá∑üá∫ –õ–∏—Ü–µ–Ω–∑–∏—è –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç—Å—è –¢–û–õ–¨–ö–û –ø–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º!\n"
        f"üá∫üáø Litsenziya FAQAT administrator tomonidan to'lov tasdiqlanganidan keyin faollashadi!\n"
        f"üö´ **–ü–ª–∞—Ç–µ–∂ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —á–µ—Ä–µ–∑ –±–æ—Ç–∞ —Å –æ—Ç–ø—Ä–∞–≤–∫–æ–π —á–µ–∫–∞!**",
        parse_mode='Markdown',
        reply_markup=InlineKeyboardMarkup(keyboard)
    )

async def handle_payment_sent(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–Ø –æ–ø–ª–∞—Ç–∏–ª'"""
    query = update.callback_query
    await query.answer()
    
    await query.message.reply_text(
        f"üì∏ **–û–¢–ü–†–ê–í–¨–¢–ï –ß–ï–ö –û–ë –û–ü–õ–ê–¢–ï / TO'LOV CHEKINI YUBORING**\n\n"
        f"üìã **–ü—Ä–∏—à–ª–∏—Ç–µ —Ñ–æ—Ç–æ –∏–ª–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç —á–µ–∫–∞ –æ–± –æ–ø–ª–∞—Ç–µ ${LICENSE_PRICE}**\n"
        f"üìã **${LICENSE_PRICE} to'lov chekining rasmini yoki skrinshotini yuboring**\n\n"
        f"‚úÖ **–ß–µ–∫ –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å / Chek o'z ichiga olishi kerak:**\n"
        f"‚Ä¢ –°—É–º–º—É / Summa: ${LICENSE_PRICE}\n"
        f"‚Ä¢ –î–∞—Ç—É –∏ –≤—Ä–µ–º—è –æ–ø–µ—Ä–∞—Ü–∏–∏ / Operatsiya sanasi va vaqti\n"
        f"‚Ä¢ –ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã –ø–æ–ª—É—á–∞—Ç–µ–ª—è / Oluvchi karta raqami:\n"
        f"  - VISA: {PAYMENT_CARDS['visa']['number']}\n"
        f"  - HUMO: {PAYMENT_CARDS['humo']['number']}\n"
        f"‚Ä¢ –ò–º—è –ø–æ–ª—É—á–∞—Ç–µ–ª—è / Oluvchi ismi: {CARD_OWNER}\n\n"
        f"‚è±Ô∏è **–ü–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —á–µ–∫–∞ / Chek yuborilganidan keyin:**\n"
        f"üá∑üá∫ ‚Ä¢ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –±—É–¥–µ—Ç —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º\n"
        f"üá∫üáø ‚Ä¢ Sizning arizangiz administrator tomonidan ko'rib chiqiladi\n"
        f"üá∑üá∫ ‚Ä¢ –û–±—Ä–∞–±–æ—Ç–∫–∞: 10-30 –º–∏–Ω—É—Ç\n"
        f"üá∫üáø ‚Ä¢ Qayta ishlash: 10-30 daqiqa\n"
        f"üá∑üá∫ ‚Ä¢ –í—ã –ø–æ–ª—É—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ\n"
        f"üá∫üáø ‚Ä¢ Natija haqida xabar olasiz\n\n"
        f"üìû –í–æ–ø—Ä–æ—Å—ã / Savollar: @rasul_asqarov_rfx\n"
        f"üë• –ì—Ä—É–ø–ø–∞ / Guruh: t.me/RFx_Group\n\n"
        f"üö´ **–í–ê–ñ–ù–û: –ü–ª–∞—Ç–µ–∂ –¢–û–õ–¨–ö–û —á–µ—Ä–µ–∑ –±–æ—Ç–∞ —Å –æ—Ç–ø—Ä–∞–≤–∫–æ–π —á–µ–∫–∞!**",
        parse_mode='Markdown'
    )
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –æ–∂–∏–¥–∞–Ω–∏—è —á–µ–∫–∞
    context.user_data['waiting_for_receipt'] = True

async def handle_download_ea(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–°–∫–∞—á–∏–≤–∞–Ω–∏–µ EA"""
    query = update.callback_query
    await query.answer()
    
    user_id = query.from_user.id
    license_data = get_user_license(user_id)
    
    if not license_data or license_data[1] == 'inactive':
        await query.message.reply_text(
            "‚ùå **–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –ª–∏—Ü–µ–Ω–∑–∏–∏!**\n\n"
            "–î–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è EA –Ω—É–∂–Ω–∞ –∞–∫—Ç–∏–≤–Ω–∞—è –ª–∏—Ü–µ–Ω–∑–∏—è.\n"
            "–ü–æ–ª—É—á–∏—Ç–µ –ø—Ä–æ–±–Ω—É—é –∏–ª–∏ –∫—É–ø–∏—Ç–µ –ø–æ–ª–Ω—É—é –ª–∏—Ü–µ–Ω–∑–∏—é.",
            parse_mode='Markdown',
            reply_markup=get_main_keyboard()
        )
        return
    
    license_key = license_data[0]
    
    # –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —Å–∫–∞—á–∏–≤–∞–Ω–∏—é
    await query.message.reply_text(
        f"üìÅ **–°–∫–∞—á–∏–≤–∞–Ω–∏–µ EA**\n\n"
        f"üîë **–í–∞—à –ª–∏—Ü–µ–Ω–∑–∏–æ–Ω–Ω—ã–π –∫–ª—é—á:** `{license_key}`\n\n"
        f"üìã **–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:**\n"
        f"1. –°–∫–∞—á–∞–π—Ç–µ —Ñ–∞–π–ª –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–¥–µ—Ç —Å–ª–µ–¥—É—é—â–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º\n"
        f"2. –ü–æ–º–µ—Å—Ç–∏—Ç–µ EA –≤ –ø–∞–ø–∫—É: MQL5/Experts/\n"
        f"3. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ MetaTrader 5\n"
        f"4. –ü—Ä–∏ –∑–∞–ø—É—Å–∫–µ EA –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à –∫–ª—é—á: `{license_key}`\n\n"
        f"‚è≥ –û—Ç–ø—Ä–∞–≤–ª—è—é —Ñ–∞–π–ª...",
        parse_mode='Markdown'
    )
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª EA
    try:
        ea_file_data = get_ea_file()
        if ea_file_data:
            await query.message.reply_document(
                document=ea_file_data,
                filename="Simple_VPS_Optimized_Version.ex5",
                caption=f"ü§ñ **–¢–æ—Ä–≥–æ–≤—ã–π —Å–æ–≤–µ—Ç–Ω–∏–∫**\n\nüîë **–õ–∏—Ü–µ–Ω–∑–∏–æ–Ω–Ω—ã–π –∫–ª—é—á:** `{license_key}`\n\n‚ùó –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –∫–ª—é—á - –æ–Ω –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ EA!",
                parse_mode='Markdown',
                reply_markup=get_main_keyboard()
            )
        else:
            await query.message.reply_text(
                "‚ùå **–û—à–∏–±–∫–∞!**\n\n–§–∞–π–ª EA –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.",
                reply_markup=get_main_keyboard()
            )
    except Exception as e:
        await query.message.reply_text(
            "‚ùå **–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∞–π–ª–∞!**\n\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.",
            reply_markup=get_main_keyboard()
        )

async def handle_back_to_menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    query = update.callback_query
    await query.answer()
    await cmd_start(update, context)

# ==============================================
# –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –§–û–¢–û –ò –î–û–ö–£–ú–ï–ù–¢–û–í
# ==============================================

async def photo_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–æ—Ç–æ (—á–µ–∫–∏ –æ–± –æ–ø–ª–∞—Ç–µ)"""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ–∂–∏–¥–∞–µ—Ç—Å—è –ª–∏ —á–µ–∫ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if not context.user_data.get('waiting_for_receipt'):
        return
    
    user_id = update.effective_user.id
    username = update.effective_user.username or "Unknown"
    request_id = context.user_data.get('payment_request_id')
    
    if not request_id:
        await update.message.reply_text("‚ùå –û—à–∏–±–∫–∞: –∑–∞—è–≤–∫–∞ –Ω–∞ –æ–ø–ª–∞—Ç—É –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        return
    
    # –ü–æ–ª—É—á–∞–µ–º —Ñ–∞–π–ª ID —Ñ–æ—Ç–æ
    photo = update.message.photo[-1]  # –ë–µ—Ä–µ–º —Ñ–æ—Ç–æ –ª—É—á—à–µ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞
    file_id = photo.file_id
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —á–µ–∫ –≤ –∑–∞—è–≤–∫—É
    if update_payment_receipt(request_id, file_id):
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É
        try:
            admin_keyboard = [
                [
                    InlineKeyboardButton("‚úÖ –û–¥–æ–±—Ä–∏—Ç—å", callback_data=f"approve_{request_id}"),
                    InlineKeyboardButton("‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data=f"reject_{request_id}")
                ]
            ]
            
            await context.bot.send_photo(
                chat_id=ADMIN_ID,
                photo=file_id,
                caption=f"üí≥ **–ù–û–í–ê–Ø –ó–ê–Ø–í–ö–ê –ù–ê –û–ü–õ–ê–¢–£**\n\n"
                        f"üë§ **–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:** @{username} (ID: {user_id})\n"
                        f"üíµ **–°—É–º–º–∞:** ${LICENSE_PRICE}\n"
                        f"üÜî **ID –∑–∞—è–≤–∫–∏:** {request_id}\n"
                        f"üí≥ **–†–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏:**\n"
                        f"   VISA: {PAYMENT_CARDS['visa']['number']}\n"
                        f"   HUMO: {PAYMENT_CARDS['humo']['number']}\n"
                        f"   –í–ª–∞–¥–µ–ª–µ—Ü: {CARD_OWNER}\n\n"
                        f"üì∏ **–ß–µ–∫ –æ–± –æ–ø–ª–∞—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω –≤—ã—à–µ**",
                parse_mode='Markdown',
                reply_markup=InlineKeyboardMarkup(admin_keyboard)
            )
            
            # –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            await update.message.reply_text(
                f"‚úÖ **–ß–ï–ö –ü–û–õ–£–ß–ï–ù! / CHEK QABUL QILINDI!**\n\n"
                f"üì∏ –í–∞—à —á–µ–∫ –æ–± –æ–ø–ª–∞—Ç–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É\n"
                f"üì∏ To'lov chekingiz tekshirish uchun administratorga yuborildi\n"
                f"‚è±Ô∏è **–í—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ / Qayta ishlash vaqti:** 10-30 –º–∏–Ω—É—Ç / daqiqa\n"
                f"üîî –í—ã –ø–æ–ª—É—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ / Natija haqida xabar olasiz\n\n"
                f"üÜî **–ù–æ–º–µ—Ä –∑–∞—è–≤–∫–∏ / Ariza raqami:** {request_id}\n\n"
                f"üìû –í–æ–ø—Ä–æ—Å—ã / Savollar: @rasul_asqarov_rfx\n"
                f"üë• –ì—Ä—É–ø–ø–∞ / Guruh: t.me/RFx_Group",
                parse_mode='Markdown',
                reply_markup=get_main_keyboard()
            )
            
            # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥–∏
            context.user_data.pop('waiting_for_receipt', None)
            context.user_data.pop('payment_request_id', None)
            
        except Exception as e:
            await update.message.reply_text(
                "‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–∫–∏! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
            )
    else:
        await update.message.reply_text("‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —á–µ–∫–∞!")

async def document_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤"""
    if not is_admin(update.effective_user.id):
        await update.message.reply_text("‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω!")
        return
    
    if not update.message.document:
        return
    
    if not update.message.document.file_name.endswith('.ex5'):
        await update.message.reply_text("‚ùå –ù—É–∂–µ–Ω —Ñ–∞–π–ª —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º .ex5!")
        return
    
    try:
        # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª
        file = await update.message.document.get_file()
        file_data = await file.download_as_bytearray()
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        if save_ea_file(file_data, update.message.document.file_name):
            await update.message.reply_text(
                f"‚úÖ **–§–∞–π–ª EA –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ!**\n\n"
                f"üìÅ **–ò–º—è —Ñ–∞–π–ª–∞:** {update.message.document.file_name}\n"
                f"üìä **–†–∞–∑–º–µ—Ä:** {len(file_data)} –±–∞–π—Ç\n\n"
                f"–¢–µ–ø–µ—Ä—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å–º–æ–≥—É—Ç —Å–∫–∞—á–∏–≤–∞—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é EA.",
                parse_mode='Markdown'
            )
        else:
            await update.message.reply_text("‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–∞!")
            
    except Exception as e:
        await update.message.reply_text("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞!")

# ==============================================
# –û–ë–†–ê–ë–û–¢–ß–ò–ö CALLBACK –ó–ê–ü–†–û–°–û–í
# ==============================================

async def callback_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback –∑–∞–ø—Ä–æ—Å–æ–≤"""
    query = update.callback_query
    data = query.data
    
    if data == "get_trial":
        await handle_get_trial(update, context)
    elif data == "check_status":
        await handle_check_status(update, context)
    elif data == "show_description":
        await handle_show_description(update, context)
    elif data == "show_instruction":
        await handle_show_instruction(update, context)
    elif data == "buy_license":
        await handle_buy_license(update, context)
    elif data == "download_ea":
        await handle_download_ea(update, context)
    elif data == "payment_sent":
        await handle_payment_sent(update, context)
    elif data == "back_to_menu":
        await handle_back_to_menu(update, context)
    # –ê–¥–º–∏–Ω—Å–∫–∏–µ callback'–∏ –¥–ª—è –ø–ª–∞—Ç–µ–∂–µ–π
    elif data.startswith("approve_"):
        await handle_admin_approve_payment(update, context)
    elif data.startswith("reject_"):
        await handle_admin_reject_payment(update, context)

async def handle_admin_approve_payment(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ê–¥–º–∏–Ω –æ–¥–æ–±—Ä—è–µ—Ç –ø–ª–∞—Ç–µ–∂"""
    if not is_admin(update.effective_user.id):
        await update.callback_query.answer("‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω!")
        return
    
    query = update.callback_query
    request_id = int(query.data.split("_")[1])
    
    # –û–¥–æ–±—Ä—è–µ–º –ø–ª–∞—Ç–µ–∂
    license_key = approve_payment(request_id)
    
    if license_key:
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –∑–∞—è–≤–∫–∏
        try:
            conn = sqlite3.connect(DB_FILE)
            cursor = conn.cursor()
            cursor.execute('SELECT user_id, username FROM payment_requests WHERE id = ?', (request_id,))
            result = cursor.fetchone()
            conn.close()
            
            if result:
                user_id, username = result
                
                # –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                try:
                    keyboard = [
                        [InlineKeyboardButton("üìÅ –°–∫–∞—á–∞—Ç—å EA", callback_data="download_ea")],
                        [InlineKeyboardButton("üîô –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_menu")]
                    ]
                    
                    await context.bot.send_message(
                        chat_id=user_id,
                        text=f"üéâ **–ü–õ–ê–¢–ï–ñ –ü–û–î–¢–í–ï–†–ñ–î–ï–ù! / TO'LOV TASDIQLANDI!**\n\n"
                             f"‚úÖ –í–∞—à–∞ –ø–æ–ª–Ω–∞—è –ª–∏—Ü–µ–Ω–∑–∏—è –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞!\n"
                             f"‚úÖ To'liq litsenziyangiz faollashtirildi!\n\n"
                             f"üîë **–õ–∏—Ü–µ–Ω–∑–∏–æ–Ω–Ω—ã–π –∫–ª—é—á / Litsenziya kaliti:**\n`{license_key}`\n\n"
                             f"‚ôæÔ∏è **–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è / Amal qilish muddati:** –ë–µ–∑–ª–∏–º–∏—Ç–Ω—ã–π / Cheksiz\n\n"
                             f"üìÅ –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ —Å–∫–∞—á–∞—Ç—å EA –∏ –Ω–∞—á–∞—Ç—å —Ç–æ—Ä–≥–æ–≤–ª—é!\n"
                             f"üìÅ Endi EA yuklab olib, savdoni boshlashingiz mumkin!\n\n"
                             f"üí° **–°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –∫–ª—é—á - –æ–Ω –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–æ–≤–µ—Ç–Ω–∏–∫–∞!**\n"
                             f"üí° **Kalitni saqlang - maslahatchi ishga tushirish uchun kerak bo'ladi!**\n\n"
                             f"üë• **–ì—Ä—É–ø–ø–∞ / Guruh:** t.me/RFx_Group\n"
                             f"üìû **–ü–æ–¥–¥–µ—Ä–∂–∫–∞ / Qo'llab-quvvatlash:** @rasul_asqarov_rfx\n\n"
                             f"üéØ **–õ–∏—Ü–µ–Ω–∑–∏—è –≤—ã–¥–∞–Ω–∞ —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º!**",
                        parse_mode='Markdown',
                        reply_markup=InlineKeyboardMarkup(keyboard)
                    )
                except:
                    pass  # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                
                # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –∞–¥–º–∏–Ω—É
                await query.message.edit_text(
                    f"‚úÖ **–ü–õ–ê–¢–ï–ñ –û–î–û–ë–†–ï–ù**\n\n"
                    f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{username}\n"
                    f"üîë –í—ã–¥–∞–Ω –∫–ª—é—á: `{license_key}`\n"
                    f"üìÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {datetime.now().strftime('%d.%m.%Y %H:%M')}",
                    parse_mode='Markdown'
                )
                
        except Exception as e:
            await query.answer("‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏!")
    else:
        await query.answer("‚ùå –û—à–∏–±–∫–∞ –æ–¥–æ–±—Ä–µ–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞!")

async def handle_admin_reject_payment(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ê–¥–º–∏–Ω –æ—Ç–∫–ª–æ–Ω—è–µ—Ç –ø–ª–∞—Ç–µ–∂"""
    if not is_admin(update.effective_user.id):
        await update.callback_query.answer("‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω!")
        return
    
    query = update.callback_query
    request_id = int(query.data.split("_")[1])
    
    # –û—Ç–∫–ª–æ–Ω—è–µ–º –ø–ª–∞—Ç–µ–∂
    if reject_payment(request_id):
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        try:
            conn = sqlite3.connect(DB_FILE)
            cursor = conn.cursor()
            cursor.execute('SELECT user_id, username FROM payment_requests WHERE id = ?', (request_id,))
            result = cursor.fetchone()
            conn.close()
            
            if result:
                user_id, username = result
                
                # –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                try:
                    await context.bot.send_message(
                        chat_id=user_id,
                        text=f"‚ùå **–ü–õ–ê–¢–ï–ñ –û–¢–ö–õ–û–ù–ï–ù / TO'LOV RAD ETILDI**\n\n"
                             f"üá∑üá∫ –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤–∞—à –ø–ª–∞—Ç–µ–∂ –Ω–µ –ø—Ä–æ—à–µ–ª –ø—Ä–æ–≤–µ—Ä–∫—É.\n"
                             f"üá∫üáø Afsuski, sizning to'lovingiz tekshiruvdan o'tmadi.\n\n"
                             f"**–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã / Mumkin bo'lgan sabablar:**\n"
                             f"‚Ä¢ –ù–µ–≤–µ—Ä–Ω–∞—è —Å—É–º–º–∞ –ø–ª–∞—Ç–µ–∂–∞ / Noto'g'ri to'lov summasi\n"
                             f"‚Ä¢ –ù–µ—Ä–∞–∑–±–æ—Ä—á–∏–≤—ã–π —á–µ–∫ / Tushunarli bo'lmagan chek\n"
                             f"‚Ä¢ –ü–ª–∞—Ç–µ–∂ –Ω–µ –ø–æ—Å—Ç—É–ø–∏–ª / To'lov kelmadi\n"
                             f"‚Ä¢ –ù–µ–≤–µ—Ä–Ω—ã–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã / Noto'g'ri rekvizitlar\n\n"
                             f"üìû **–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∑–∞ –ø–æ–º–æ—â—å—é / Yordam uchun murojaat qiling:** @rasul_asqarov_rfx\n"
                             f"üë• **–ì—Ä—É–ø–ø–∞ / Guruh:** t.me/RFx_Group\n\n"
                             f"üí° –í—ã –º–æ–∂–µ—Ç–µ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –æ–ø–ª–∞—Ç–∏—Ç—å –µ—â–µ —Ä–∞–∑ / Qayta to'lashni urinib ko'rishingiz mumkin",
                        parse_mode='Markdown',
                        reply_markup=get_main_keyboard()
                    )
                except:
                    pass
                
                # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –∞–¥–º–∏–Ω—É
                await query.message.edit_text(
                    f"‚ùå **–ü–õ–ê–¢–ï–ñ –û–¢–ö–õ–û–ù–ï–ù**\n\n"
                    f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{username}\n"
                    f"üìÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {datetime.now().strftime('%d.%m.%Y %H:%M')}",
                    parse_mode='Markdown'
                )
                
        except Exception as e:
            await query.answer("‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏!")
    else:
        await query.answer("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞!")

# ==============================================
# –ì–õ–ê–í–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø
# ==============================================

def main():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    print("üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º TOKEN
    if not TOKEN:
        print("‚ùå –û–®–ò–ë–ö–ê: –ù–µ –Ω–∞–π–¥–µ–Ω BOT_TOKEN!")
        print("–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è: export BOT_TOKEN='–≤–∞—à_—Ç–æ–∫–µ–Ω'")
        return
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    init_database()
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    app = Application.builder().token(TOKEN).build()
    
    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    app.add_handler(CommandHandler("start", cmd_start))
    app.add_handler(CommandHandler("help", cmd_help))
    app.add_handler(CommandHandler("stats", cmd_stats))
    app.add_handler(CommandHandler("upload_ea", cmd_upload_ea))
    app.add_handler(CommandHandler("payments", cmd_payments))
    
    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ callback'–æ–≤, –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –∏ —Ñ–æ—Ç–æ
    app.add_handler(CallbackQueryHandler(callback_handler))
    app.add_handler(MessageHandler(filters.Document.ALL, document_handler))
    app.add_handler(MessageHandler(filters.PHOTO, photo_handler))
    
    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
    print(f"üë®‚Äçüíº Admin ID: {ADMIN_ID}")
    print("üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞: @rasul_asqarov_rfx")
    print("üë• –ì—Ä—É–ø–ø–∞: t.me/RFx_Group")
    print("\nüìã –î–û–°–¢–£–ü–ù–´–ï –ê–î–ú–ò–ù–°–ö–ò–ï –ö–û–ú–ê–ù–î–´:")
    print("‚Ä¢ /stats - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞")
    print("‚Ä¢ /upload_ea - –∑–∞–≥—Ä—É–∑–∫–∞ EA —Ñ–∞–π–ª–∞")
    print("‚Ä¢ /payments - –æ–∂–∏–¥–∞—é—â–∏–µ –ø–ª–∞—Ç–µ–∂–∏")
    print("‚Ä¢ –û–¥–æ–±—Ä–µ–Ω–∏–µ/–æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–µ–π —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫–∏")
    print("\nüí≥ –†–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –æ–ø–ª–∞—Ç—ã:")
    print(f"   VISA Kapital: {PAYMENT_CARDS['visa']['number']}")
    print(f"   HUMO Kapital: {PAYMENT_CARDS['humo']['number']}")
    print(f"   –í–ª–∞–¥–µ–ª–µ—Ü: {CARD_OWNER}")
    print("\nüö´ –í–ê–ñ–ù–û: –ü–ª–∞—Ç–µ–∂–∏ –¢–û–õ–¨–ö–û —á–µ—Ä–µ–∑ –±–æ—Ç–∞ —Å –æ—Ç–ø—Ä–∞–≤–∫–æ–π —á–µ–∫–æ–≤!")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    app.run_polling(drop_pending_updates=True)

if __name__ == '__main__':
    main()
